{{- if eq .DocType "resource" -}}{{- template "resource" .}}{{end -}}{{- if eq .DocType "datasource"}}{{template "datasource" .}}{{end -}}

{{- define "resource" -}}
---
subcategory: "TODO"
layout: "{{.ProviderName}}"
page_title: "{{.ProviderCanonicalName}}: {{.SnakeName}}"
description: |-
  Manages {{PrefixedDescriptionString .Name}}.
---
# {{.ProviderName}}_{{.Name}}

Manages {{PrefixedDescriptionString .Name}}.

```hcl
{{- template "usage_example" .}}
```

## Arguments Reference

The following arguments are supported:
{{- range $name, $value := .Resource.Schema }}{{- if $value.Required}}

{{SchemaItemFormatter $value $name}}{{end -}}

{{end}}

---
{{- range $name, $value := .Resource.Schema }}{{- if $value.Optional}}

{{SchemaItemFormatter $value $name}}{{end -}}
{{end}}

{{- range $name, $value := .Resource.Schema }}{{if $value.Elem}}{{if $value.Elem.schema}}

---

{{PrefixedLabelString $name}} block supports the following:
{{- range $bname, $bvalue := $value.Elem.schema }}

* `{{$bname}}` - {{if $bvalue.required}}(Required) {{end}}{{if $bvalue.optional}}(Optional) {{end}}{{if or (eq $bvalue.type "TypeList") (eq $bvalue.type "TypeSet")}}a `{{$bname}}` block as detailed below.{{else}}{{if ne $bvalue.description nil}}{{$bvalue.description}}{{else}} // TODO - Add description field to schema for this item and regenerate docs{{end}}{{end}}{{- if $bvalue.ForceNew}} Changing this forces a new resource to be created.{{end -}}
{{end}}{{end}}{{end}}{{end}}

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the {{ToDelimTitle .Name}}
{{range $name, $value := .Resource.Schema }}{{- if and ($value.Computed) (and (not $value.Required) (not $value.Optional)) }}{{if not (eq $name "id")}}
* `{{$name}}` - {{if ne $value.Description ""}}{{$value.Description}}{{else}} // TODO - Add description field to schema for this item and regenerate docs{{end}}
{{end -}}
{{end -}}{{- /* end if and ($value.Computed) (and (not $value.Required) (not $value.Optional)) */ -}}
{{end}}
## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to {{ .Resource.Timeouts.Create }} minutes) Used when creating the {{ToDelimTitle .Name}}.
* `update` - (Defaults to {{ .Resource.Timeouts.Update }} minutes) Used when updating the {{ToDelimTitle .Name}}.
* `read` - (Defaults to {{ .Resource.Timeouts.Read }} minutes) Used when retrieving the {{ToDelimTitle .Name}}.
* `delete` - (Defaults to {{ .Resource.Timeouts.Delete }} minutes) Used when deleting the {{ToDelimTitle .Name}}.

## Import

{{PrefixedDescriptionString .Name}} can be imported using the `resource id`, e.g.

```shell
terraform import {{.Name}}.example "{{.IDExample}}"
```
{{- end -}} {{- /* End of resource template def */ -}}

{{define "datasouce"}}
Not yet implemented, but Documents a datasource eventually
{{end -}}

{{define "usage_example" }}
resource "{{.ProviderName}}_{{.Name}}" "example" {
{{range $name, $value := .Resource.Schema }}{{if and ($value.Required) (eq $value.Type "TypeString")}}  {{$name}} = "example"
{{end}}{{end}}
{{range $name, $value := .Resource.Schema }}{{if and ($value.Required) (eq $value.Type "TypeList")}}  {{$name}} = {}
{{end}}{{end}}}
{{end}}
