{{- if eq .DocType "resource" -}}{{- template "resource" .}}{{end -}}{{- if eq .DocType "datasource"}}{{template "datasource" .}}{{end -}}

{{- define "resource" -}}
---
subcategory: "TODO"
layout: "{{.ProviderName}}"
page_title: "{{.ProviderName}}: {{.Name}}"
description: |-
Manages a {{ToDescriptionString .Name}}.
---
# Manages a {{ToDescriptionString .Name}}.
```hcl
{{- template "usage_example" .}}
```

## Arguments Reference

The following arguments are supported:
{{range $name, $value := .Schema.Block.Attributes }}{{- if $value.Required}}
* `{{$name}}` - (Required) {{$value.Description}}{{end -}}
{{end}}

---
{{range $name, $value := .Schema.Block.Attributes}}{{- if $value.Optional}}
* `{{$name}}` - (Optional) {{$value.Description}}
{{end -}}{{- /* end if $value.Optional */ -}}
{{end}}

## Attributes Reference
In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the {{ToDescriptionString .Name}}
{{range $name, $value := .Schema.Block.Attributes }}{{- if and ($value.Computed) (and (not $value.Required) (not $value.Optional)) }}{{if not (eq $name "id")}}
* `{{$name}}` - {{$value.Description}}
{{end -}}
{{end -}}{{- /* end if and ($value.Computed) (and (not $value.Required) (not $value.Optional)) */ -}}
{{end -}}

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to TODO minutes) Used when creating the {{ToDescriptionString .Name}}.
* `update` - (Defaults to TODO minutes) Used when updating the {{ToDescriptionString .Name}}t.
* `read` - (Defaults to TODO minutes) Used when retrieving the {{ToDescriptionString .Name}}.
* `delete` - (Defaults to TODO minutes) Used when deleting the {{ToDescriptionString .Name}}.

## Import

Subscriptions can be imported using the `resource id`, e.g.

```shell
terraform import {{.Name}}.example "{{.IDExample}}"
```
{{end -}} {{- /* End of resource template def */ -}}

{{define "datasouce"}}
Not yet implemented, but Documents a datasource eventually
{{end}}


{{ define "usage_example" }}
resource "{{.ProviderName}}_{{.Name}}" "example" {
{{- range $name, $value := .Schema.Block.Attributes }}{{if $value.Required}}
  {{$name}} = {{if eq $value.Type "string"}}"example"{{end -}}
{{end}}{{end}}
}
{{end}}